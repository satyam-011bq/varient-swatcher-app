generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String   @id @default(uuid()) // UUID as the primary key
  shop          String   @unique

  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String    
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)

  // Relation to products model
  products      products[] @relation("SessionProducts") // One session can have multiple products
}

model products {
  id            String   @id // Use the ID from the API as the primary key
  product_sku   String?
  product_name  String?
  featuredImage String?
  handle        String?
  status        String?
  title         String?
  store_id      String   // Store ID linked to session's ID (foreign key)

  // Relation to session model
  session       Session   @relation("SessionProducts", fields: [store_id], references: [id]) // Linking store_id with session ID
}


model groupproducts {
  id            String   @id @default(uuid()) // UUID as the primary key
  group_id      String   // Foreign key referencing groups table
  product_sku   String
  product_name  String
  swatch_title  String?
  swatch_color  String?
  swatch_image  String?
  sort_order    Int?

  // Relation to groups model
  group         groups    @relation(fields: [group_id], references: [id]) // Linking to groups table
}

model groups {
  id              String   @id @default(uuid()) // UUID as the primary key
  group_identifier String?
  button_style     ButtonStyle
  option_title     String?
  store_id         String

  // Relation to groupproducts model
  products        groupproducts[]
}

enum ButtonStyle {
  ColorSwatch
  ProductImageSwatch
  Text
}
